<?phpclass User_Model_Mapper_User{	private $_dbTable;	private $_cache;		public function __construct()	{		$this->_cache  = Zend_Controller_Front::getInstance()								->getParam('bootstrap')								->getResource('cachemanager')								->getCache('frontcore');										$this->_dbTable = new User_Model_DbTable_User();	}		public function find( $id, User_Model_User $user )	{		$rowSet = $this->_dbTable->find( $id );		$row  	= $rowSet->current();		$user->populate( $row );	}		public function fetchAll()	{		$cacheId = 'User_fetchAll';		if( !$rowSet = $this->_cache->load( $cacheId ) ){				$rowSet = $this->_dbTable->fetchAll();			$this->_cache->save($rowSet);		}				$users  = array();		foreach( $rowSet  as $row ){			$user = new User_Model_User( $row );			$users[] = $user;		}		return $users;	}		public function delete( $id )	{						$where = 'id = ' . $id;		if( $this->_dbTable->delete( $where ) ){			$this->_cache->remove('User_fetchAll');			return true;		}		return false;	}		public function save( User_Model_User $user )	{						if( (int) $user->getId() !== 0 ){			// update		} else {			// insert			$data['login']    	= $user->getLogin();			$data['password'] 	= $user->getPassword();			$data['nom'] 		= $user->getNom();			$data['prenom'] 	= $user->getPrenom();			$data['email'] 		= $user->getEmail();			$data['telephone'] 	= $user->getTelephone();			$data['civilite'] 	= $user->getCivilite();			if( $id = $this->_dbTable->insert( $data ) ){				return $id;			}		}		return false;	}		public function login( User_Model_User $user )	{		$db = Zend_Controller_Front::getInstance()->getParam('bootstrap')												  ->getResource('db');		$authAdapter = new Zend_Auth_Adapter_DbTable( $db );		$authAdapter->setTableName( 'user' )					->setIdentityColumn( 'login')					->setCredentialColumn( 'password' )					->setIdentity( $user->getLogin() )					->setCredential( $user->getPassword() );		$auth       = Zend_Auth::getInstance();		$result     = $auth->authenticate($authAdapter);				if( $result->getCode() === 1 ){					$userData = $authAdapter->getResultRowObject( null, 'password');			$auth->getStorage()->write($userData);						return true;		}else{			return false;		}	}}